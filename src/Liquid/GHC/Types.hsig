{-# OPTIONS_GHC -sig-of ghc-prim:GHC.Types #-}

{-# LANGUAGE GADTs #-}
{-# LANGUAGE MagicHash #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE QuasiQuotes #-}

module Liquid.GHC.Types (module GHC.Types) where

import LiquidHaskell

import GHC.Types hiding (Bool(..), Int(..))

import Liquid.GHC.Prim

data Bool where
  False :: [lq| { v:Bool | v <=> false } |]
  True  :: [lq| { v:Bool | v <=> true  } |]

data Int where
  I# :: [lq| x:Int# -> { v:Int | v = x } |]

[lq| embed Int  as int |]
[lq| embed Bool as bool |]

[lq| isTrue# :: n:Int# -> {v:Bool | n = 1 <=> v} |]

