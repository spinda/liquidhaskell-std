{-# OPTIONS_GHC -sig-of base:GHC.Num #-}

{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE QuasiQuotes #-}

module Liquid.GHC.Num (module GHC.Num) where

import LiquidHaskell

import GHC.Num

import Liquid.GHC.Base
import Liquid.GHC.Integer

[lq| (+) :: Num a => x:a -> y:a -> { v:a | v = x + y } |]
[lq| (-) :: Num a => x:a -> y:a -> { v:a | v = x - y } |]

[lq| fromInteger :: Num a => x:Integer -> { v:a | v = x } |]

[lq| negate :: Num a => x:a -> { v:a | v = -x } |]

