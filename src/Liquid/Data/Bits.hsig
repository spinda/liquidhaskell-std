{-# OPTIONS_GHC -sig-of base:Data.Bits #-}

{-# LANGUAGE QuasiQuotes #-}

module Liquid.Data.Bits (module Data.Bits) where

import LiquidHaskell
import LiquidHaskell.Prelude

import Data.Bits

import Liquid.Prelude

-- TODO: cannot use this because `Bits` is not a `Num`
-- class Eq a => Bits a where
--   shiftR :: [lq| x:a -> d:Nat -> {v:a | (d = 1) => (x <= 2*v + 1 && 2*v <= x) } |]

