{-# OPTIONS_GHC -sig-of base:Data.Traversable #-}

{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE RankNTypes #-}

module Liquid.Data.Traversable (module Data.Traversable) where

import LiquidHaskell
import LiquidHaskell.Prelude

import Data.Traversable

import Liquid.GHC.Base

-- TODO: (see Data.Foldable)
-- [lq| sequence :: Traversable t => forall m. Monad m => xs:t (m a) -> m {v:t a | len v = len xs} |]

